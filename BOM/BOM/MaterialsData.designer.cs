#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BOM
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FinalProject")]
	public partial class MaterialsDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 확장성 메서드 정의
    partial void OnCreated();
    partial void InsertMaterials(Materials instance);
    partial void UpdateMaterials(Materials instance);
    partial void DeleteMaterials(Materials instance);
    partial void InsertMaterials_Type(Materials_Type instance);
    partial void UpdateMaterials_Type(Materials_Type instance);
    partial void DeleteMaterials_Type(Materials_Type instance);
    partial void InsertOfferer(Offerer instance);
    partial void UpdateOfferer(Offerer instance);
    partial void DeleteOfferer(Offerer instance);
    #endregion
		
		public MaterialsDataDataContext() : 
				base(global::BOM.Properties.Settings.Default.FinalProjectConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MaterialsDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MaterialsDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MaterialsDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MaterialsDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Materials> Materials
		{
			get
			{
				return this.GetTable<Materials>();
			}
		}
		
		public System.Data.Linq.Table<Materials_Type> Materials_Type
		{
			get
			{
				return this.GetTable<Materials_Type>();
			}
		}
		
		public System.Data.Linq.Table<Offerer> Offerer
		{
			get
			{
				return this.GetTable<Offerer>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Bom_JW_MatInfoView")]
		public ISingleResult<Bom_JW_MatInfoViewResult> Bom_JW_MatInfoView([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MatName", DbType="NVarChar(50)")] string matName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), matName);
			return ((ISingleResult<Bom_JW_MatInfoViewResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.BOM_JW_MOLLA")]
		public ISingleResult<BOM_JW_MOLLAResult> BOM_JW_MOLLA([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MatNama", DbType="NVarChar(50)")] string matNama)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), matNama);
			return ((ISingleResult<BOM_JW_MOLLAResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Bom_JW_MatUpdate")]
		public int Bom_JW_MatUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string matUpdateName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> offNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> matType, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string matManufactur, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string matName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> matCost, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> matLevel)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), matUpdateName, offNo, matType, matManufactur, matName, matCost, matLevel);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Bom_JW_MatDelete")]
		public int Bom_JW_MatDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MatName", DbType="NVarChar(50)")] string matName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), matName);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Materials")]
	public partial class Materials : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Mat_No;
		
		private int _Mat_Type_No;
		
		private string _Mat_Manufactur;
		
		private string _Mat_Name;
		
		private System.Nullable<int> _Mat_Cost;
		
		private int _Mat_Level;
		
		private System.Nullable<int> _Mat_EA;
		
		private System.Nullable<int> _Off_No;
		
		private EntityRef<Materials_Type> _Materials_Type;
		
		private EntityRef<Offerer> _Offerer;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMat_NoChanging(int value);
    partial void OnMat_NoChanged();
    partial void OnMat_Type_NoChanging(int value);
    partial void OnMat_Type_NoChanged();
    partial void OnMat_ManufacturChanging(string value);
    partial void OnMat_ManufacturChanged();
    partial void OnMat_NameChanging(string value);
    partial void OnMat_NameChanged();
    partial void OnMat_CostChanging(System.Nullable<int> value);
    partial void OnMat_CostChanged();
    partial void OnMat_LevelChanging(int value);
    partial void OnMat_LevelChanged();
    partial void OnMat_EAChanging(System.Nullable<int> value);
    partial void OnMat_EAChanged();
    partial void OnOff_NoChanging(System.Nullable<int> value);
    partial void OnOff_NoChanged();
    #endregion
		
		public Materials()
		{
			this._Materials_Type = default(EntityRef<Materials_Type>);
			this._Offerer = default(EntityRef<Offerer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mat_No", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Mat_No
		{
			get
			{
				return this._Mat_No;
			}
			set
			{
				if ((this._Mat_No != value))
				{
					this.OnMat_NoChanging(value);
					this.SendPropertyChanging();
					this._Mat_No = value;
					this.SendPropertyChanged("Mat_No");
					this.OnMat_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mat_Type_No", DbType="Int NOT NULL")]
		public int Mat_Type_No
		{
			get
			{
				return this._Mat_Type_No;
			}
			set
			{
				if ((this._Mat_Type_No != value))
				{
					if (this._Materials_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMat_Type_NoChanging(value);
					this.SendPropertyChanging();
					this._Mat_Type_No = value;
					this.SendPropertyChanged("Mat_Type_No");
					this.OnMat_Type_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mat_Manufactur", DbType="NVarChar(50)")]
		public string Mat_Manufactur
		{
			get
			{
				return this._Mat_Manufactur;
			}
			set
			{
				if ((this._Mat_Manufactur != value))
				{
					this.OnMat_ManufacturChanging(value);
					this.SendPropertyChanging();
					this._Mat_Manufactur = value;
					this.SendPropertyChanged("Mat_Manufactur");
					this.OnMat_ManufacturChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mat_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Mat_Name
		{
			get
			{
				return this._Mat_Name;
			}
			set
			{
				if ((this._Mat_Name != value))
				{
					this.OnMat_NameChanging(value);
					this.SendPropertyChanging();
					this._Mat_Name = value;
					this.SendPropertyChanged("Mat_Name");
					this.OnMat_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mat_Cost", DbType="Int")]
		public System.Nullable<int> Mat_Cost
		{
			get
			{
				return this._Mat_Cost;
			}
			set
			{
				if ((this._Mat_Cost != value))
				{
					this.OnMat_CostChanging(value);
					this.SendPropertyChanging();
					this._Mat_Cost = value;
					this.SendPropertyChanged("Mat_Cost");
					this.OnMat_CostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mat_Level", DbType="Int NOT NULL")]
		public int Mat_Level
		{
			get
			{
				return this._Mat_Level;
			}
			set
			{
				if ((this._Mat_Level != value))
				{
					this.OnMat_LevelChanging(value);
					this.SendPropertyChanging();
					this._Mat_Level = value;
					this.SendPropertyChanged("Mat_Level");
					this.OnMat_LevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mat_EA", DbType="Int")]
		public System.Nullable<int> Mat_EA
		{
			get
			{
				return this._Mat_EA;
			}
			set
			{
				if ((this._Mat_EA != value))
				{
					this.OnMat_EAChanging(value);
					this.SendPropertyChanging();
					this._Mat_EA = value;
					this.SendPropertyChanged("Mat_EA");
					this.OnMat_EAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Off_No", DbType="Int")]
		public System.Nullable<int> Off_No
		{
			get
			{
				return this._Off_No;
			}
			set
			{
				if ((this._Off_No != value))
				{
					if (this._Offerer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOff_NoChanging(value);
					this.SendPropertyChanging();
					this._Off_No = value;
					this.SendPropertyChanged("Off_No");
					this.OnOff_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Materials_Type_Materials", Storage="_Materials_Type", ThisKey="Mat_Type_No", OtherKey="Mat_Type_No", IsForeignKey=true)]
		public Materials_Type Materials_Type
		{
			get
			{
				return this._Materials_Type.Entity;
			}
			set
			{
				Materials_Type previousValue = this._Materials_Type.Entity;
				if (((previousValue != value) 
							|| (this._Materials_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Materials_Type.Entity = null;
						previousValue.Materials.Remove(this);
					}
					this._Materials_Type.Entity = value;
					if ((value != null))
					{
						value.Materials.Add(this);
						this._Mat_Type_No = value.Mat_Type_No;
					}
					else
					{
						this._Mat_Type_No = default(int);
					}
					this.SendPropertyChanged("Materials_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offerer_Materials", Storage="_Offerer", ThisKey="Off_No", OtherKey="Off_No", IsForeignKey=true)]
		public Offerer Offerer
		{
			get
			{
				return this._Offerer.Entity;
			}
			set
			{
				Offerer previousValue = this._Offerer.Entity;
				if (((previousValue != value) 
							|| (this._Offerer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Offerer.Entity = null;
						previousValue.Materials.Remove(this);
					}
					this._Offerer.Entity = value;
					if ((value != null))
					{
						value.Materials.Add(this);
						this._Off_No = value.Off_No;
					}
					else
					{
						this._Off_No = default(Nullable<int>);
					}
					this.SendPropertyChanged("Offerer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Materials_Type")]
	public partial class Materials_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Mat_Type_No;
		
		private string _Mat_Type_Category;
		
		private EntitySet<Materials> _Materials;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMat_Type_NoChanging(int value);
    partial void OnMat_Type_NoChanged();
    partial void OnMat_Type_CategoryChanging(string value);
    partial void OnMat_Type_CategoryChanged();
    #endregion
		
		public Materials_Type()
		{
			this._Materials = new EntitySet<Materials>(new Action<Materials>(this.attach_Materials), new Action<Materials>(this.detach_Materials));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mat_Type_No", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Mat_Type_No
		{
			get
			{
				return this._Mat_Type_No;
			}
			set
			{
				if ((this._Mat_Type_No != value))
				{
					this.OnMat_Type_NoChanging(value);
					this.SendPropertyChanging();
					this._Mat_Type_No = value;
					this.SendPropertyChanged("Mat_Type_No");
					this.OnMat_Type_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mat_Type_Category", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Mat_Type_Category
		{
			get
			{
				return this._Mat_Type_Category;
			}
			set
			{
				if ((this._Mat_Type_Category != value))
				{
					this.OnMat_Type_CategoryChanging(value);
					this.SendPropertyChanging();
					this._Mat_Type_Category = value;
					this.SendPropertyChanged("Mat_Type_Category");
					this.OnMat_Type_CategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Materials_Type_Materials", Storage="_Materials", ThisKey="Mat_Type_No", OtherKey="Mat_Type_No")]
		public EntitySet<Materials> Materials
		{
			get
			{
				return this._Materials;
			}
			set
			{
				this._Materials.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Materials(Materials entity)
		{
			this.SendPropertyChanging();
			entity.Materials_Type = this;
		}
		
		private void detach_Materials(Materials entity)
		{
			this.SendPropertyChanging();
			entity.Materials_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Offerer")]
	public partial class Offerer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Off_No;
		
		private string _Off_Name;
		
		private string _Off_Owner_Name;
		
		private string _Off_Owner_Phone;
		
		private string _Off_Addr;
		
		private string _Off_Mgr_Name;
		
		private string _Off_Mgr_Phone;
		
		private EntitySet<Materials> _Materials;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOff_NoChanging(int value);
    partial void OnOff_NoChanged();
    partial void OnOff_NameChanging(string value);
    partial void OnOff_NameChanged();
    partial void OnOff_Owner_NameChanging(string value);
    partial void OnOff_Owner_NameChanged();
    partial void OnOff_Owner_PhoneChanging(string value);
    partial void OnOff_Owner_PhoneChanged();
    partial void OnOff_AddrChanging(string value);
    partial void OnOff_AddrChanged();
    partial void OnOff_Mgr_NameChanging(string value);
    partial void OnOff_Mgr_NameChanged();
    partial void OnOff_Mgr_PhoneChanging(string value);
    partial void OnOff_Mgr_PhoneChanged();
    #endregion
		
		public Offerer()
		{
			this._Materials = new EntitySet<Materials>(new Action<Materials>(this.attach_Materials), new Action<Materials>(this.detach_Materials));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Off_No", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Off_No
		{
			get
			{
				return this._Off_No;
			}
			set
			{
				if ((this._Off_No != value))
				{
					this.OnOff_NoChanging(value);
					this.SendPropertyChanging();
					this._Off_No = value;
					this.SendPropertyChanged("Off_No");
					this.OnOff_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Off_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Off_Name
		{
			get
			{
				return this._Off_Name;
			}
			set
			{
				if ((this._Off_Name != value))
				{
					this.OnOff_NameChanging(value);
					this.SendPropertyChanging();
					this._Off_Name = value;
					this.SendPropertyChanged("Off_Name");
					this.OnOff_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Off_Owner_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Off_Owner_Name
		{
			get
			{
				return this._Off_Owner_Name;
			}
			set
			{
				if ((this._Off_Owner_Name != value))
				{
					this.OnOff_Owner_NameChanging(value);
					this.SendPropertyChanging();
					this._Off_Owner_Name = value;
					this.SendPropertyChanged("Off_Owner_Name");
					this.OnOff_Owner_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Off_Owner_Phone", DbType="NVarChar(15)")]
		public string Off_Owner_Phone
		{
			get
			{
				return this._Off_Owner_Phone;
			}
			set
			{
				if ((this._Off_Owner_Phone != value))
				{
					this.OnOff_Owner_PhoneChanging(value);
					this.SendPropertyChanging();
					this._Off_Owner_Phone = value;
					this.SendPropertyChanged("Off_Owner_Phone");
					this.OnOff_Owner_PhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Off_Addr", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Off_Addr
		{
			get
			{
				return this._Off_Addr;
			}
			set
			{
				if ((this._Off_Addr != value))
				{
					this.OnOff_AddrChanging(value);
					this.SendPropertyChanging();
					this._Off_Addr = value;
					this.SendPropertyChanged("Off_Addr");
					this.OnOff_AddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Off_Mgr_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Off_Mgr_Name
		{
			get
			{
				return this._Off_Mgr_Name;
			}
			set
			{
				if ((this._Off_Mgr_Name != value))
				{
					this.OnOff_Mgr_NameChanging(value);
					this.SendPropertyChanging();
					this._Off_Mgr_Name = value;
					this.SendPropertyChanged("Off_Mgr_Name");
					this.OnOff_Mgr_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Off_Mgr_Phone", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Off_Mgr_Phone
		{
			get
			{
				return this._Off_Mgr_Phone;
			}
			set
			{
				if ((this._Off_Mgr_Phone != value))
				{
					this.OnOff_Mgr_PhoneChanging(value);
					this.SendPropertyChanging();
					this._Off_Mgr_Phone = value;
					this.SendPropertyChanged("Off_Mgr_Phone");
					this.OnOff_Mgr_PhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offerer_Materials", Storage="_Materials", ThisKey="Off_No", OtherKey="Off_No")]
		public EntitySet<Materials> Materials
		{
			get
			{
				return this._Materials;
			}
			set
			{
				this._Materials.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Materials(Materials entity)
		{
			this.SendPropertyChanging();
			entity.Offerer = this;
		}
		
		private void detach_Materials(Materials entity)
		{
			this.SendPropertyChanging();
			entity.Offerer = null;
		}
	}
	
	public partial class Bom_JW_MatInfoViewResult
	{
		
		private string _Off_Name;
		
		private string _Mat_Type_Category;
		
		private string _Mat_Manufactur;
		
		private string _Mat_Name;
		
		private System.Nullable<int> _Mat_Cost;
		
		private int _Mat_Level;
		
		public Bom_JW_MatInfoViewResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Off_Name", DbType="NVarChar(100)")]
		public string Off_Name
		{
			get
			{
				return this._Off_Name;
			}
			set
			{
				if ((this._Off_Name != value))
				{
					this._Off_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mat_Type_Category", DbType="NVarChar(100)")]
		public string Mat_Type_Category
		{
			get
			{
				return this._Mat_Type_Category;
			}
			set
			{
				if ((this._Mat_Type_Category != value))
				{
					this._Mat_Type_Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mat_Manufactur", DbType="NVarChar(50)")]
		public string Mat_Manufactur
		{
			get
			{
				return this._Mat_Manufactur;
			}
			set
			{
				if ((this._Mat_Manufactur != value))
				{
					this._Mat_Manufactur = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mat_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Mat_Name
		{
			get
			{
				return this._Mat_Name;
			}
			set
			{
				if ((this._Mat_Name != value))
				{
					this._Mat_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mat_Cost", DbType="Int")]
		public System.Nullable<int> Mat_Cost
		{
			get
			{
				return this._Mat_Cost;
			}
			set
			{
				if ((this._Mat_Cost != value))
				{
					this._Mat_Cost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mat_Level", DbType="Int NOT NULL")]
		public int Mat_Level
		{
			get
			{
				return this._Mat_Level;
			}
			set
			{
				if ((this._Mat_Level != value))
				{
					this._Mat_Level = value;
				}
			}
		}
	}
	
	public partial class BOM_JW_MOLLAResult
	{
		
		private string _Mat_Type_No;
		
		public BOM_JW_MOLLAResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mat_Type_No", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Mat_Type_No
		{
			get
			{
				return this._Mat_Type_No;
			}
			set
			{
				if ((this._Mat_Type_No != value))
				{
					this._Mat_Type_No = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
