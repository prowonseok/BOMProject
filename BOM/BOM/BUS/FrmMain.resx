<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAeAAAAHgCAYAAAB91L6VAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4wIbCAQQ1hTEqgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAkDSURBVHhe
        7d3NimTlAcbx8gM0FxA/snQjcRcVRSLBrUiQRIJ3oIIgCFFJMIm6iM7oQkkkcRujot6Agt6AeAMiWYrf
        ZuFEYxST521lqMm8jt3Vp+Zhqn8/+G/eqTpVu4dues5ZAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAACwf+enq9Jt6TfpsfSMJEk70Ni0sW1j436czktVF6fb08vpw/RfSZKOQB+kl9Kv0tjC
        s+aydDz9M82+mCRJR6WxhcfSpWlrfpAeSZ+n2ZeQJOmo9ll6KC3+E/EN6R9p9qGSJOmb3k7XpUXcm/6T
        Zh8kSZJO7Yt0T9rY+Cuvx9Ps4pIk6cw9lcb/Ejqwv6TZBSVJ0v56Oh3Iw2l2IUmSdLB+l/bllvR1ml1E
        kiQdrLGpt6Yz+lH6OM0uIEmSNmvcsOry9J1eTLM3SpKkw/X3NHVTmr1BkiQdvvGr6BvTaV5PszdIkqRl
        ejWd4to0e6EkSVq2q9NJ4/8pzV4kSZKWbdygY8+F6aM0e5EkSVq299PeHbKu//ZAkiSdnfZ+Df3A2oEk
        Sdp+96XV82sHkiRp+z2bVm+uHSzRl+lYGs9DvEKSpHO4sWXH09i22eZt2htp9e7awRLdkQBgl9yZZpu3
        ae+k1Ym1g8M2xnw8RxgAdsnYtiV/YP00Lfrko3E3LQDYRa+l2fZt0tje6T9s2mm32AKAHfFKmm3fpk0P
        N80AA7CrDDAAFBhgACgwwABQYIABoMAAA0CBAQaAAgMMAAUGGAAKDDAAFBhgACgwwABQYIABoMAAA0CB
        AQaAAgMMAAUGGAAKDDAAFBhgACgwwABQYIABoMAAA0CBAQaAAgMMAAUGGAAKDDAAFBhgACgwwABQYIAB
        oMAAA0CBAQaAAgMMAAUGGAAKDDAAFBhgACgwwABQYIABoMAAA0CBAQaAAgMMAAUGGAAKDDAAFBhgACgw
        wABQYIABoMAAA0CBAQaAAgMMAAUGGAAKDDAAFBhgACgwwABQYIABoMAAA0CBAQaAAgMMAAUGGAAKDDAA
        FBhgACgwwABQYIABoMAAA0CBAQaAAgMMAAUGGAAKDDAAFBhgACgwwABQYIABoMAAA0CBAQaAAgMMAAUG
        GAAKDDAAFBhgACgwwABQYIABoMAAA0CBAQaAAgMMAAUGGAAKDDAAFBhgACgwwABQYIABoMAAA0CBAQaA
        AgMMAAUGGAAKDDAAFBhgACgwwABQYIABoMAAA0CBAQaAAgMMAAUGGAAKDDAAFBhgACgwwABQYIABoMAA
        A0CBAQaAAgMMAAUGGAAKDDAAFBhgACgwwABQYIABoMAAA0CBAQaAAgMMAAUGGAAKDDAAFBhgACgwwABQ
        YIABoMAAA0CBAQaAAgMMAAUGGAAKDDAAFBhgACgwwABQYIABoMAAA0CBAQaAAgMMAAUGGAAKDDAAFBhg
        ACgwwABQYIABoMAAA0CBAQaAAgMMAAUGGAAKDDAAFBhgACgwwABQYIABoMAAA0CBAQaAAgMMAAUGGAAK
        DDAAFBhgACgwwABQYIABoMAAA0CBAQaAAgMMAAUGGAAKDDAAFBhgACgwwABQYIABoMAAA0CBAQaAAgMM
        AAUGGAAKDDAAFBhgACgwwABQYIABoMAAA0CBAQaAAgMMAAUGGAAKDDAAFBhgACgwwABQYIABoMAAA0CB
        AQaAAgMMAAUGGAAKDDAAFBhgACgwwABQYIABoMAAA0CBAQaAAgMMAAUGGAAKDDAAFBhgACgwwABQYIAB
        oMAAA0CBAQaAAgMMAAUGGAAKDDAAFBhgACgwwABQYIABoMAAA0CBAQaAAgMMAAUGGAAKDDAAFBhgACgw
        wABQYIABoMAAA0CBAQaAAgMMAAUGGAAKDDAAFBhgACgwwABQYIABoMAAA0CBAQaAAgMMAAUGGAAKDDAA
        FBhgACgwwABQYIABoMAAA0CBAQaAAgMMAAUGGAAKDDAAFBhgACgwwABQYIABoMAAA0CBAQaAAgMMAAUG
        GAAKDDAAFBhgACgwwABQYIABoMAAA0CBAQaAAgMMAAUGGAAKDDAAFBhgACgwwABQYIABoMAAA0CBAQaA
        AgMMAAUGGAAKDDAAFBhgACgwwABQYIABoMAAA0CBAQaAAgMMAAUGGAAKDDAAFBhgACgwwABQYIABoGDx
        Af76/w4O0+sJAHbRa2m2fZs0tnd1Yu3gsL2bzksAsEvGto2Nm23fJn2aFr3g6M4EALvkrjTbvE17J63e
        XDtYoi/T8XR9ukKSpHO4sWVPpK/SbPM27Y20em7tQJIkbb+/pdX9aweSJGn7/Tqtrls7kCRJ2+8naXVB
        +vDbA0mStN3eS+enPX9KsxdJkqRlezKddE2avUiSJC3b3q+f1y15hw9JknR643aWp/lZmr1YkiQdvnH7
        yZ+mqRfS7E2SJOlwPZu+0+XpozR7oyRJ2qwP0mXpjG5OSz4hSZKko9zY1J+nffl9ml1EkiQdrN+mA3k6
        zS4kSZL215/TgY1nHx5LswtKkqQz91Q6ecerTdyTvkizi0uSpFP7d7o7LWI8sOHtNPsgSZL0TW+la9Oi
        Lk5/SP9Ksw+VJOmodiI9mC5KW3NJejR9kmZfQpKko9LYwj+mH6azZqz8bWncPev9NPtikiTtWuNxgs+n
        X6at/sS7H+Mvpq9Mv0j3p8fSX9MzkiSdw40tG5t2XxobN7ZubB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAN9vtfofpuBmwz4CvMAAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>50</value>
  </metadata>
</root>